{
  "contractName": "AnswerFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "answers",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "upvotes",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "questions",
      "outputs": [
        {
          "name": "endTime",
          "type": "uint256"
        },
        {
          "name": "bounty",
          "type": "uint256"
        },
        {
          "name": "asker",
          "type": "address"
        },
        {
          "name": "answerFee",
          "type": "uint256"
        },
        {
          "name": "payedOut",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "answerIdToQuestionId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minBounty",
          "type": "uint256"
        }
      ],
      "name": "setMinBounty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDuration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getQuestionsCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAnswerFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMinBounty",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "newQuestion",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_answerFee",
          "type": "uint256"
        }
      ],
      "name": "setAnswerFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setDuration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "answerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "answerer",
          "type": "address"
        }
      ],
      "name": "NewAnswer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bounty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "asker",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "answerFee",
          "type": "uint256"
        }
      ],
      "name": "NewQuestion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_questionId",
          "type": "uint256"
        }
      ],
      "name": "createAnswer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052655af3107a4000600155620151806002556509184e72a000600355336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c50806100ae6000396000f3006080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317599cc5146100e057806331b1b978146101545780633a5ae6de146101e15780633b58f49a1461022257806360c5c9721461024f578063715018a61461026f5780638da5cb5b14610286578063ad2e8c9b146102dd578063c2e112d214610308578063c5d5649814610333578063ce9aec2a1461035e578063e10e20ab14610389578063f2fde38b14610393578063f41c1c93146103d6578063f6be71d114610403575b600080fd5b3480156100ec57600080fd5b5061010b60048036038101908080359060200190929190505050610430565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561016057600080fd5b5061017f60048036038101908080359060200190929190505050610483565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019550505050505060405180910390f35b3480156101ed57600080fd5b5061020c600480360381019080803590602001909291905050506104f5565b6040518082815260200191505060405180910390f35b34801561022e57600080fd5b5061024d6004803603810190808035906020019092919050505061050d565b005b61026d60048036038101908080359060200190929190505050610572565b005b34801561027b57600080fd5b50610284610714565b005b34801561029257600080fd5b5061029b610816565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e957600080fd5b506102f261083b565b6040518082815260200191505060405180910390f35b34801561031457600080fd5b5061031d610845565b6040518082815260200191505060405180910390f35b34801561033f57600080fd5b50610348610852565b6040518082815260200191505060405180910390f35b34801561036a57600080fd5b5061037361085c565b6040518082815260200191505060405180910390f35b610391610866565b005b34801561039f57600080fd5b506103d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a05565b005b3480156103e257600080fd5b5061040160048036038101908080359060200190929190505050610b5a565b005b34801561040f57600080fd5b5061042e60048036038101908080359060200190929190505050610bbf565b005b60068181548110151561043f57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60048181548110151561049257fe5b90600052602060002090600502016000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60056020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056857600080fd5b8060018190555050565b60008160048181548110151561058457fe5b90600052602060002090600502016000015442111515156105a457600080fd5b6004838154811015156105b357fe5b90600052602060002090600502016003015434101515156105d357600080fd5b6001600660408051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160008152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550500391508260056000848152602001908152602001600020819055507fe1e68d6c2fb9835e7d7b5bf35cb1d87e6490040c381d19bf7b31d6cda7181074838333604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561076f57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b6000600480549050905090565b6000600354905090565b6000600154905090565b6000806001543411151561087957600080fd5b600254420191506001600460a0604051908101604052808581526020013481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160035481526020016000151581525090806001815401808255809150509060018203906000526020600020906005020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555050500390507ff5a9b7fceb3a218fa1aa41ab4dcf7b83c19a3315128cf126ec445de81bf6c26581833433600354604051808681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019550505050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a6057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a9c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bb557600080fd5b8060038190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1a57600080fd5b80600281905550505600a165627a7a72305820f4405321cf0c59900fb8fd4bc7f27e30c4fee513cb469d4c2ea0e2b0415649610029",
  "deployedBytecode": "0x6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317599cc5146100e057806331b1b978146101545780633a5ae6de146101e15780633b58f49a1461022257806360c5c9721461024f578063715018a61461026f5780638da5cb5b14610286578063ad2e8c9b146102dd578063c2e112d214610308578063c5d5649814610333578063ce9aec2a1461035e578063e10e20ab14610389578063f2fde38b14610393578063f41c1c93146103d6578063f6be71d114610403575b600080fd5b3480156100ec57600080fd5b5061010b60048036038101908080359060200190929190505050610430565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561016057600080fd5b5061017f60048036038101908080359060200190929190505050610483565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019550505050505060405180910390f35b3480156101ed57600080fd5b5061020c600480360381019080803590602001909291905050506104f5565b6040518082815260200191505060405180910390f35b34801561022e57600080fd5b5061024d6004803603810190808035906020019092919050505061050d565b005b61026d60048036038101908080359060200190929190505050610572565b005b34801561027b57600080fd5b50610284610714565b005b34801561029257600080fd5b5061029b610816565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e957600080fd5b506102f261083b565b6040518082815260200191505060405180910390f35b34801561031457600080fd5b5061031d610845565b6040518082815260200191505060405180910390f35b34801561033f57600080fd5b50610348610852565b6040518082815260200191505060405180910390f35b34801561036a57600080fd5b5061037361085c565b6040518082815260200191505060405180910390f35b610391610866565b005b34801561039f57600080fd5b506103d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a05565b005b3480156103e257600080fd5b5061040160048036038101908080359060200190929190505050610b5a565b005b34801561040f57600080fd5b5061042e60048036038101908080359060200190929190505050610bbf565b005b60068181548110151561043f57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60048181548110151561049257fe5b90600052602060002090600502016000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60056020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561056857600080fd5b8060018190555050565b60008160048181548110151561058457fe5b90600052602060002090600502016000015442111515156105a457600080fd5b6004838154811015156105b357fe5b90600052602060002090600502016003015434101515156105d357600080fd5b6001600660408051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160008152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550500391508260056000848152602001908152602001600020819055507fe1e68d6c2fb9835e7d7b5bf35cb1d87e6490040c381d19bf7b31d6cda7181074838333604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561076f57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b6000600480549050905090565b6000600354905090565b6000600154905090565b6000806001543411151561087957600080fd5b600254420191506001600460a0604051908101604052808581526020013481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160035481526020016000151581525090806001815401808255809150509060018203906000526020600020906005020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555050500390507ff5a9b7fceb3a218fa1aa41ab4dcf7b83c19a3315128cf126ec445de81bf6c26581833433600354604051808681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019550505050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a6057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a9c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bb557600080fd5b8060038190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c1a57600080fd5b80600281905550505600a165627a7a72305820f4405321cf0c59900fb8fd4bc7f27e30c4fee513cb469d4c2ea0e2b0415649610029",
  "sourceMap": "128:1222:0:-;;;256:19:2;239:36;;297:6;281:22;;326:18;309:35;;602:10:4;594:5;;:18;;;;;;;;;;;;;;;;;;3137:10:2;3129:5;;:18;;;;;;;;;;;;;;;;;;128:1222:0;;;;;;",
  "deployedSourceMap": "128:1222:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;776:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;910:27:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;910:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:49:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1307:94:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1307:94:2;;;;;;;;;;;;;;;;;;;;;;;;;;1018:330:0;;;;;;;;;;;;;;;;;;;;;;;;;;1234:121:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:121:4;;;;;;240:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;240:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:82:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1506:82:2;;;;;;;;;;;;;;;;;;;;;;;1045:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1045:96:2;;;;;;;;;;;;;;;;;;;;;;;1810:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1810:84:2;;;;;;;;;;;;;;;;;;;;;;;1213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1213:84:2;;;;;;;;;;;;;;;;;;;;;;;2307:450;;;;;;950:188:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;950:188:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1904:95:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1904:95:2;;;;;;;;;;;;;;;;;;;;;;;;;;1598:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1598:91:2;;;;;;;;;;;;;;;;;;;;;;;;;;776:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;910:27:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;611:49:0:-;;;;;;;;;;;;;;;;;:::o;1307:94:2:-;758:5:4;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1384:10:2;1372:9;:22;;;;1307:94;:::o;1018:330:0:-;1182:7;1086:11;3438:9:2;3448:11;3438:22;;;;;;;;;;;;;;;;;;;;:30;;;3431:3;:37;;3423:46;;;;;;;;1130:9:0;1140:11;1130:22;;;;;;;;;;;;;;;;;;;;:32;;;1117:9;:45;;1109:54;;;;;;;;1230:1;1192:7;1205:21;;;;;;;;;1212:10;1205:21;;;;;;1224:1;1205:21;;;1192:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1192:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:39;1182:49;;1268:11;1241:20;:24;1262:2;1241:24;;;;;;;;;;;:38;;;;1303;1313:11;1326:2;1330:10;1303:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:330;;;:::o;1234:121:4:-;758:5;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1314:5;;;;;;;;;;;1295:25;;;;;;;;;;;;1346:1;1330:5;;:18;;;;;;;;;;;;;;;;;;1234:121::o;240:20::-;;;;;;;;;;;;;:::o;1506:82:2:-;1550:4;1573:8;;1566:15;;1506:82;:::o;1045:96::-;1095:4;1118:9;:16;;;;1111:23;;1045:96;:::o;1810:84::-;1855:4;1878:9;;1871:16;;1810:84;:::o;1213:::-;1258:4;1281:9;;1274:16;;1213:84;:::o;2307:450::-;2405:13;2446:7;2376:9;;2364;:21;2356:30;;;;;;;;2427:8;;2421:3;:14;2405:30;;2604:1;2456:9;2471:129;;;;;;;;;2493:8;2471:129;;;;2515:9;2471:129;;;;2538:10;2471:129;;;;;;2562:9;;2471:129;;;;2585:5;2471:129;;;;;2456:145;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2456:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:149;2446:159;;2621:129;2646:2;2662:8;2684:9;2707:10;2731:9;;2621:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2307:450;;:::o;950:188:4:-;758:5;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1050:1;1030:22;;:8;:22;;;;1022:31;;;;;;;;1096:8;1068:37;;1089:5;;;;;;;;;;;1068:37;;;;;;;;;;;;1123:8;1115:5;;:16;;;;;;;;;;;;;;;;;;950:188;:::o;1904:95:2:-;758:5:4;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1982:10:2;1970:9;:22;;;;1904:95;:::o;1598:91::-;758:5:4;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1673:9:2;1662:8;:20;;;;1598:91;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"./QuestionFactory.sol\";\n\n/*\n * the AnswerFactory allows user to post answers to questions\n */\ncontract AnswerFactory is QuestionFactory {\n\n    /*\n     * NewAnswer is emited whenever a NewAnswer and it's addition to the bounty is successfully posted.\n     */\n    event NewAnswer(uint questionId, uint answerId, address answerer);\n\n    /*\n     * Answer struct tracks owner and upvotes. \n     */\n    struct Answer {\n        address owner;\n        uint upvotes;\n    }\n\n    /*\n     * answerIdToQuesionsId can take any answerId and map it to it's corresponding question.\n     */\n    mapping(uint => uint) public answerIdToQuestionId;\n\n    /*\n     * similar to questions all answers are stored in an array as they are succesfully posted\n     */\n    Answer[] public answers;\n\n    /*\n     * createAnswer checks to make sure the min value is sent.  Then it pushes the answer to answers and adds\n     * it to the mapping.  Finally it emits that a new answer was successfully posted.\n     */\n    function createAnswer(uint _questionId) public payable questionOpen(_questionId) {\n        require(msg.value >= questions[_questionId].answerFee);\n        \n        uint id = answers.push(Answer(msg.sender, 0)) - 1;\n        answerIdToQuestionId[id] = _questionId;\n        \n        emit NewAnswer(_questionId, id, msg.sender);\n    }\n}",
  "sourcePath": "/home/williamc/projects/t/thesis/contracts/contracts/AnswerFactory.sol",
  "ast": {
    "absolutePath": "/home/williamc/projects/t/thesis/contracts/contracts/AnswerFactory.sol",
    "exportedSymbols": {
      "AnswerFactory": [
        70
      ]
    },
    "id": 71,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/williamc/projects/t/thesis/contracts/contracts/QuestionFactory.sol",
        "file": "./QuestionFactory.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 71,
        "sourceUnit": 306,
        "src": "26:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "QuestionFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 305,
              "src": "154:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_QuestionFactory_$305",
                "typeString": "contract QuestionFactory"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "154:15:0"
          }
        ],
        "contractDependencies": [
          305,
          681
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 70,
        "linearizedBaseContracts": [
          70,
          305,
          681
        ],
        "name": "AnswerFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "NewAnswer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "name": "questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "312:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "answerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "329:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "answerer",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "344:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "311:50:0"
            },
            "src": "296:66:0"
          },
          {
            "canonicalName": "AnswerFactory.Answer",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "455:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "455:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "upvotes",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "478:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "478:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Answer",
            "nodeType": "StructDefinition",
            "scope": 70,
            "src": "431:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "answerIdToQuestionId",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "611:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "619:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "611:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "627:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "answers",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "776:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage",
              "typeString": "struct AnswerFactory.Answer[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 22,
                "name": "Answer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17,
                "src": "776:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Answer_$17_storage_ptr",
                  "typeString": "struct AnswerFactory.Answer"
                }
              },
              "id": 23,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "776:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage_ptr",
                "typeString": "struct AnswerFactory.Answer[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1099:249:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "1117:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1117:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 35,
                              "name": "questions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "1130:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Question_$164_storage_$dyn_storage",
                                "typeString": "struct QuestionFactory.Question storage ref[] storage ref"
                              }
                            },
                            "id": 37,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 36,
                              "name": "_questionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1140:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1130:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$164_storage",
                              "typeString": "struct QuestionFactory.Question storage ref"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 161,
                          "src": "1130:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1117:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        699,
                        700
                      ],
                      "referencedDeclaration": 699,
                      "src": "1109:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:54:0"
                },
                {
                  "assignments": [
                    43
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "1182:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1182:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 47,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 696,
                                "src": "1212:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1212:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1224:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46,
                            "name": "Answer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1205:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Answer_$17_storage_ptr_$",
                              "typeString": "type(struct AnswerFactory.Answer storage pointer)"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1205:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Answer_$17_memory",
                            "typeString": "struct AnswerFactory.Answer memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Answer_$17_memory",
                            "typeString": "struct AnswerFactory.Answer memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "answers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1192:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage",
                            "typeString": "struct AnswerFactory.Answer storage ref[] storage ref"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1192:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Answer_$17_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct AnswerFactory.Answer storage ref) returns (uint256)"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1192:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1230:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1192:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1182:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "answerIdToQuestionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1241:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 57,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1262:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1241:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1268:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1241:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "_questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1313:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1326:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 64,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "1330:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1330:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 61,
                      "name": "NewAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1303:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "EmitStatement",
                  "src": "1298:43:0"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 29,
                    "name": "_questionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "1086:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 28,
                  "name": "questionOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "1073:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1073:25:0"
              }
            ],
            "name": "createAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1040:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1039:18:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:0:0"
            },
            "scope": 70,
            "src": "1018:330:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 71,
        "src": "128:1222:0"
      }
    ],
    "src": "0:1350:0"
  },
  "legacyAST": {
    "absolutePath": "/home/williamc/projects/t/thesis/contracts/contracts/AnswerFactory.sol",
    "exportedSymbols": {
      "AnswerFactory": [
        70
      ]
    },
    "id": 71,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/williamc/projects/t/thesis/contracts/contracts/QuestionFactory.sol",
        "file": "./QuestionFactory.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 71,
        "sourceUnit": 306,
        "src": "26:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "QuestionFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 305,
              "src": "154:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_QuestionFactory_$305",
                "typeString": "contract QuestionFactory"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "154:15:0"
          }
        ],
        "contractDependencies": [
          305,
          681
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 70,
        "linearizedBaseContracts": [
          70,
          305,
          681
        ],
        "name": "AnswerFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "NewAnswer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "name": "questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "312:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "answerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "329:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "answerer",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "344:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "311:50:0"
            },
            "src": "296:66:0"
          },
          {
            "canonicalName": "AnswerFactory.Answer",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "455:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "455:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "upvotes",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "478:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "478:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Answer",
            "nodeType": "StructDefinition",
            "scope": 70,
            "src": "431:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "answerIdToQuestionId",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "611:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "619:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "611:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "627:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "answers",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "776:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage",
              "typeString": "struct AnswerFactory.Answer[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 22,
                "name": "Answer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17,
                "src": "776:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Answer_$17_storage_ptr",
                  "typeString": "struct AnswerFactory.Answer"
                }
              },
              "id": 23,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "776:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage_ptr",
                "typeString": "struct AnswerFactory.Answer[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1099:249:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "1117:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1117:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 35,
                              "name": "questions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "1130:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Question_$164_storage_$dyn_storage",
                                "typeString": "struct QuestionFactory.Question storage ref[] storage ref"
                              }
                            },
                            "id": 37,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 36,
                              "name": "_questionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1140:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1130:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$164_storage",
                              "typeString": "struct QuestionFactory.Question storage ref"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 161,
                          "src": "1130:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1117:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        699,
                        700
                      ],
                      "referencedDeclaration": 699,
                      "src": "1109:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:54:0"
                },
                {
                  "assignments": [
                    43
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "1182:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1182:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 47,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 696,
                                "src": "1212:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1212:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1224:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46,
                            "name": "Answer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1205:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Answer_$17_storage_ptr_$",
                              "typeString": "type(struct AnswerFactory.Answer storage pointer)"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1205:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Answer_$17_memory",
                            "typeString": "struct AnswerFactory.Answer memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Answer_$17_memory",
                            "typeString": "struct AnswerFactory.Answer memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "answers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1192:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage",
                            "typeString": "struct AnswerFactory.Answer storage ref[] storage ref"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1192:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Answer_$17_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct AnswerFactory.Answer storage ref) returns (uint256)"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1192:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1230:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1192:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1182:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "answerIdToQuestionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1241:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 57,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1262:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1241:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1268:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1241:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "_questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1313:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1326:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 64,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "1330:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1330:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 61,
                      "name": "NewAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1303:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "EmitStatement",
                  "src": "1298:43:0"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 29,
                    "name": "_questionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "1086:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 28,
                  "name": "questionOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "1073:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1073:25:0"
              }
            ],
            "name": "createAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1040:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1039:18:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:0:0"
            },
            "scope": 70,
            "src": "1018:330:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 71,
        "src": "128:1222:0"
      }
    ],
    "src": "0:1350:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-22T04:22:30.301Z"
}