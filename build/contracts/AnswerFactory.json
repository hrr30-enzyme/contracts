{
  "contractName": "AnswerFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "answers",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "upvotes",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "questions",
      "outputs": [
        {
          "name": "minBounty",
          "type": "uint256"
        },
        {
          "name": "duration",
          "type": "uint256"
        },
        {
          "name": "endTime",
          "type": "uint256"
        },
        {
          "name": "bounty",
          "type": "uint256"
        },
        {
          "name": "asker",
          "type": "address"
        },
        {
          "name": "answerFee",
          "type": "uint256"
        },
        {
          "name": "payedOut",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "answerIdToQuestionId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minBounty",
          "type": "uint256"
        }
      ],
      "name": "setMinBounty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDuration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getQuestionsCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAnswerFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMinBounty",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "newQuestion",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_answerFee",
          "type": "uint256"
        }
      ],
      "name": "setAnswerFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setDuration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "answerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "answerer",
          "type": "address"
        }
      ],
      "name": "NewAnswer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "minBounty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bounty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "asker",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "answerFee",
          "type": "uint256"
        }
      ],
      "name": "NewQuestion",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_questionId",
          "type": "uint256"
        }
      ],
      "name": "createAnswer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061090b806100536000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317599cc5146100bf57806331b1b978146101335780633a5ae6de146101ce5780633b58f49a1461020f57806360c5c9721461023c578063ad2e8c9b1461025c578063c2e112d214610287578063c5d56498146102b2578063ce9aec2a146102dd578063e10e20ab14610308578063f41c1c9314610312578063f6be71d11461033f575b600080fd5b3480156100cb57600080fd5b506100ea6004803603810190808035906020019092919050505061036c565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561013f57600080fd5b5061015e600480360381019080803590602001909291905050506103bf565b604051808881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200197505050505050505060405180910390f35b3480156101da57600080fd5b506101f96004803603810190808035906020019092919050505061043d565b6040518082815260200191505060405180910390f35b34801561021b57600080fd5b5061023a60048036038101908080359060200190929190505050610455565b005b61025a600480360381019080803590602001909291905050506104ba565b005b34801561026857600080fd5b50610271610613565b6040518082815260200191505060405180910390f35b34801561029357600080fd5b5061029c61061d565b6040518082815260200191505060405180910390f35b3480156102be57600080fd5b506102c761062a565b6040518082815260200191505060405180910390f35b3480156102e957600080fd5b506102f2610634565b6040518082815260200191505060405180910390f35b61031061063e565b005b34801561031e57600080fd5b5061033d60048036038101908080359060200190929190505050610815565b005b34801561034b57600080fd5b5061036a6004803603810190808035906020019092919050505061087a565b005b60068181548110151561037b57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6004818154811015156103ce57fe5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900460ff16905087565b60056020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104b057600080fd5b8060018190555050565b60006004828154811015156104cb57fe5b90600052602060002090600702016005015434101515156104eb57600080fd5b6001600660408051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160008152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550500390507fe1e68d6c2fb9835e7d7b5bf35cb1d87e6490040c381d19bf7b31d6cda7181074828233604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15050565b6000600254905090565b6000600480549050905090565b6000600354905090565b6000600154905090565b6000806001543411151561065157600080fd5b600254420191506001600460e060405190810160405280600154815260200160025481526020018581526020013481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600354815260200160001515815250908060018154018082558091505090600182039060005260206000209060070201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555050500390507fb0761b92d1c7f833c1f295bd18dfd6a18aa9fad5abc1cce13002637203804d4381600154600254853433600354604051808881526020018781526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200197505050505050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561087057600080fd5b8060038190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108d557600080fd5b80600281905550505600a165627a7a72305820844c07a5dc7f1bbd671535f81bf38af729a83e4481034903468ae6099c5470bb0029",
  "deployedBytecode": "0x6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317599cc5146100bf57806331b1b978146101335780633a5ae6de146101ce5780633b58f49a1461020f57806360c5c9721461023c578063ad2e8c9b1461025c578063c2e112d214610287578063c5d56498146102b2578063ce9aec2a146102dd578063e10e20ab14610308578063f41c1c9314610312578063f6be71d11461033f575b600080fd5b3480156100cb57600080fd5b506100ea6004803603810190808035906020019092919050505061036c565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561013f57600080fd5b5061015e600480360381019080803590602001909291905050506103bf565b604051808881526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200197505050505050505060405180910390f35b3480156101da57600080fd5b506101f96004803603810190808035906020019092919050505061043d565b6040518082815260200191505060405180910390f35b34801561021b57600080fd5b5061023a60048036038101908080359060200190929190505050610455565b005b61025a600480360381019080803590602001909291905050506104ba565b005b34801561026857600080fd5b50610271610613565b6040518082815260200191505060405180910390f35b34801561029357600080fd5b5061029c61061d565b6040518082815260200191505060405180910390f35b3480156102be57600080fd5b506102c761062a565b6040518082815260200191505060405180910390f35b3480156102e957600080fd5b506102f2610634565b6040518082815260200191505060405180910390f35b61031061063e565b005b34801561031e57600080fd5b5061033d60048036038101908080359060200190929190505050610815565b005b34801561034b57600080fd5b5061036a6004803603810190808035906020019092919050505061087a565b005b60068181548110151561037b57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6004818154811015156103ce57fe5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900460ff16905087565b60056020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104b057600080fd5b8060018190555050565b60006004828154811015156104cb57fe5b90600052602060002090600702016005015434101515156104eb57600080fd5b6001600660408051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160008152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550500390507fe1e68d6c2fb9835e7d7b5bf35cb1d87e6490040c381d19bf7b31d6cda7181074828233604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15050565b6000600254905090565b6000600480549050905090565b6000600354905090565b6000600154905090565b6000806001543411151561065157600080fd5b600254420191506001600460e060405190810160405280600154815260200160025481526020018581526020013481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600354815260200160001515815250908060018154018082558091505090600182039060005260206000209060070201600090919290919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555050500390507fb0761b92d1c7f833c1f295bd18dfd6a18aa9fad5abc1cce13002637203804d4381600154600254853433600354604051808881526020018781526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200197505050505050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561087057600080fd5b8060038190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108d557600080fd5b80600281905550505600a165627a7a72305820844c07a5dc7f1bbd671535f81bf38af729a83e4481034903468ae6099c5470bb0029",
  "sourceMap": "59:520:0:-;;;1828:10:1;1820:5;;:18;;;;;;;;;;;;;;;;;;59:520:0;;;;;;",
  "deployedSourceMap": "59:520:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;308:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:27:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;518:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:49:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:94:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;752:94:1;;;;;;;;;;;;;;;;;;;;;;;;;;338:238:0;;;;;;;;;;;;;;;;;;;;;;;;;;856:82:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;856:82:1;;;;;;;;;;;;;;;;;;;;;;;552:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;552:96:1;;;;;;;;;;;;;;;;;;;;;;;1049:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1049:84:1;;;;;;;;;;;;;;;;;;;;;;;658;;8:9:-1;5:2;;;30:1;27;20:12;5:2;658:84:1;;;;;;;;;;;;;;;;;;;;;;;1244:539;;;;;;1143:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1143:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;948:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;308:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;518:27:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;252:49:0:-;;;;;;;;;;;;;;;;;:::o;752:94:1:-;2024:5;;;;;;;;;;;2010:19;;:10;:19;;;2002:28;;;;;;;;829:10;817:9;:22;;;;752:94;:::o;338:238:0:-;467:7;424:9;434:11;424:22;;;;;;;;;;;;;;;;;;;;:32;;;411:9;:45;;403:54;;;;;;;;515:1;477:7;490:21;;;;;;;;;497:10;490:21;;;;;;509:1;490:21;;;477:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;477:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:39;467:49;;531:38;541:11;554:2;558:10;531:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;338:238;;:::o;856:82:1:-;900:4;923:8;;916:15;;856:82;:::o;552:96::-;602:4;625:9;:16;;;;618:23;;552:96;:::o;1049:84::-;1094:4;1117:9;;1110:16;;1049:84;:::o;658:::-;703:4;726:9;;719:16;;658:84;:::o;1244:539::-;1341:13;1382:7;1312:9;;1300;:21;1292:30;;;;;;;;1363:8;;1357:3;:14;1341:30;;1585:1;1392:9;1407:174;;;;;;;;;1429:9;;1407:174;;;;1452:8;;1407:174;;;;1474:8;1407:174;;;;1496:9;1407:174;;;;1519:10;1407:174;;;;;;1543:9;;1407:174;;;;1566:5;1407:174;;;;;1392:190;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1392:190:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:194;1382:204;;1602:174;1627:2;1643:9;;1666:8;;1688;1710:9;1733:10;1757:9;;1602:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:539;;:::o;1143:95::-;2024:5;;;;;;;;;;;2010:19;;:10;:19;;;2002:28;;;;;;;;1221:10;1209:9;:22;;;;1143:95;:::o;948:91::-;2024:5;;;;;;;;;;;2010:19;;:10;:19;;;2002:28;;;;;;;;1023:9;1012:8;:20;;;;948:91;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"./QuestionFactory.sol\";\n\ncontract AnswerFactory is QuestionFactory {\n\n    event NewAnswer(uint questionId, uint answerId, address answerer);\n\n    struct Answer {\n        address owner;\n        uint upvotes;\n    }\n\n    mapping(uint => uint) public answerIdToQuestionId;\n\n    Answer[] public answers;\n\n    function createAnswer(uint _questionId) public payable {\n        require(msg.value >= questions[_questionId].answerFee);\n        uint id = answers.push(Answer(msg.sender, 0)) - 1;\n        emit NewAnswer(_questionId, id, msg.sender);\n    }\n\n}",
  "sourcePath": "/home/williamc/projects/t/thesis/contracts/contracts/AnswerFactory.sol",
  "ast": {
    "absolutePath": "/home/williamc/projects/t/thesis/contracts/contracts/AnswerFactory.sol",
    "exportedSymbols": {
      "AnswerFactory": [
        61
      ]
    },
    "id": 62,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/williamc/projects/t/thesis/contracts/contracts/QuestionFactory.sol",
        "file": "./QuestionFactory.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 62,
        "sourceUnit": 259,
        "src": "26:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "QuestionFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 258,
              "src": "85:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_QuestionFactory_$258",
                "typeString": "contract QuestionFactory"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "85:15:0"
          }
        ],
        "contractDependencies": [
          258
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 61,
        "linearizedBaseContracts": [
          61,
          258
        ],
        "name": "AnswerFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "NewAnswer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "name": "questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "124:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "answerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "141:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "141:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "answerer",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "156:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "123:50:0"
            },
            "src": "108:66:0"
          },
          {
            "canonicalName": "AnswerFactory.Answer",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "204:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "204:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "upvotes",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "227:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "227:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Answer",
            "nodeType": "StructDefinition",
            "scope": 61,
            "src": "180:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "answerIdToQuestionId",
            "nodeType": "VariableDeclaration",
            "scope": 61,
            "src": "252:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "260:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "252:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "268:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "answers",
            "nodeType": "VariableDeclaration",
            "scope": 61,
            "src": "308:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage",
              "typeString": "struct AnswerFactory.Answer[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 22,
                "name": "Answer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17,
                "src": "308:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Answer_$17_storage_ptr",
                  "typeString": "struct AnswerFactory.Answer"
                }
              },
              "id": 23,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "308:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage_ptr",
                "typeString": "struct AnswerFactory.Answer[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "393:183:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 30,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "411:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "411:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 32,
                              "name": "questions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "424:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Question_$102_storage_$dyn_storage",
                                "typeString": "struct QuestionFactory.Question storage ref[] storage ref"
                              }
                            },
                            "id": 34,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 33,
                              "name": "_questionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "434:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "424:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$102_storage",
                              "typeString": "struct QuestionFactory.Question storage ref"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "424:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "411:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        576,
                        577
                      ],
                      "referencedDeclaration": 576,
                      "src": "403:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "403:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "403:54:0"
                },
                {
                  "assignments": [
                    40
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 60,
                      "src": "467:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "467:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 44,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 573,
                                "src": "497:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "497:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "509:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 43,
                            "name": "Answer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "490:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Answer_$17_storage_ptr_$",
                              "typeString": "type(struct AnswerFactory.Answer storage pointer)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "490:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Answer_$17_memory",
                            "typeString": "struct AnswerFactory.Answer memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Answer_$17_memory",
                            "typeString": "struct AnswerFactory.Answer memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 41,
                          "name": "answers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "477:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage",
                            "typeString": "struct AnswerFactory.Answer storage ref[] storage ref"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "477:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Answer_$17_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct AnswerFactory.Answer storage ref) returns (uint256)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "477:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "515:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "477:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "467:49:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "_questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "541:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "554:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 55,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "558:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "558:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 52,
                      "name": "NewAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "531:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "EmitStatement",
                  "src": "526:43:0"
                }
              ]
            },
            "documentation": null,
            "id": 60,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "360:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "359:18:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:0:0"
            },
            "scope": 61,
            "src": "338:238:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 62,
        "src": "59:520:0"
      }
    ],
    "src": "0:579:0"
  },
  "legacyAST": {
    "absolutePath": "/home/williamc/projects/t/thesis/contracts/contracts/AnswerFactory.sol",
    "exportedSymbols": {
      "AnswerFactory": [
        61
      ]
    },
    "id": 62,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/home/williamc/projects/t/thesis/contracts/contracts/QuestionFactory.sol",
        "file": "./QuestionFactory.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 62,
        "sourceUnit": 259,
        "src": "26:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "QuestionFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 258,
              "src": "85:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_QuestionFactory_$258",
                "typeString": "contract QuestionFactory"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "85:15:0"
          }
        ],
        "contractDependencies": [
          258
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 61,
        "linearizedBaseContracts": [
          61,
          258
        ],
        "name": "AnswerFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12,
            "name": "NewAnswer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "name": "questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "124:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "answerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "141:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "141:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "indexed": false,
                  "name": "answerer",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "156:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "123:50:0"
            },
            "src": "108:66:0"
          },
          {
            "canonicalName": "AnswerFactory.Answer",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "204:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 13,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "204:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "upvotes",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "227:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "227:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Answer",
            "nodeType": "StructDefinition",
            "scope": 61,
            "src": "180:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "answerIdToQuestionId",
            "nodeType": "VariableDeclaration",
            "scope": 61,
            "src": "252:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "260:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "252:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "268:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "answers",
            "nodeType": "VariableDeclaration",
            "scope": 61,
            "src": "308:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage",
              "typeString": "struct AnswerFactory.Answer[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 22,
                "name": "Answer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17,
                "src": "308:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Answer_$17_storage_ptr",
                  "typeString": "struct AnswerFactory.Answer"
                }
              },
              "id": 23,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "308:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage_ptr",
                "typeString": "struct AnswerFactory.Answer[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "393:183:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 30,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "411:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "411:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 32,
                              "name": "questions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "424:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Question_$102_storage_$dyn_storage",
                                "typeString": "struct QuestionFactory.Question storage ref[] storage ref"
                              }
                            },
                            "id": 34,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 33,
                              "name": "_questionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "434:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "424:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$102_storage",
                              "typeString": "struct QuestionFactory.Question storage ref"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "424:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "411:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        576,
                        577
                      ],
                      "referencedDeclaration": 576,
                      "src": "403:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "403:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "403:54:0"
                },
                {
                  "assignments": [
                    40
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 60,
                      "src": "467:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "467:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 44,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 573,
                                "src": "497:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "497:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "509:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 43,
                            "name": "Answer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "490:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Answer_$17_storage_ptr_$",
                              "typeString": "type(struct AnswerFactory.Answer storage pointer)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "490:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Answer_$17_memory",
                            "typeString": "struct AnswerFactory.Answer memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Answer_$17_memory",
                            "typeString": "struct AnswerFactory.Answer memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 41,
                          "name": "answers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "477:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Answer_$17_storage_$dyn_storage",
                            "typeString": "struct AnswerFactory.Answer storage ref[] storage ref"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "477:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Answer_$17_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct AnswerFactory.Answer storage ref) returns (uint256)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "477:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "515:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "477:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "467:49:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "_questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "541:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "554:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 55,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "558:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "558:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 52,
                      "name": "NewAnswer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "531:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "EmitStatement",
                  "src": "526:43:0"
                }
              ]
            },
            "documentation": null,
            "id": 60,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "360:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "359:18:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:0:0"
            },
            "scope": 61,
            "src": "338:238:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 62,
        "src": "59:520:0"
      }
    ],
    "src": "0:579:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-21T07:33:42.879Z"
}